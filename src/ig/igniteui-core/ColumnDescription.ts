/* 
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE: 
https://www.infragistics.com/legal/license/igultimate-la 
https://www.infragistics.com/legal/license/igultimate-eula 
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/

import { DefinitionBaseDescription } from "./DefinitionBaseDescription";
import { Description } from "./Description";
import { GridColumnAnimationSettingsDescription } from "./GridColumnAnimationSettingsDescription";
import { ColumnWidthDescription } from "./ColumnWidthDescription";
import { ColumnFilterConditionDescription } from "./ColumnFilterConditionDescription";
import { HeaderDescription } from "./HeaderDescription";
import { Base, Type, markType } from "./type";

/**
 * @hidden 
 */
export abstract class ColumnDescription extends DefinitionBaseDescription {
	static $t: Type = markType(ColumnDescription, 'ColumnDescription', (<any>DefinitionBaseDescription).$type);
	protected get_type(): string {
		return "Column";
	}
	constructor() {
		super();
	}
	private _paddingLeft: number = 0;
	get paddingLeft(): number {
		return this._paddingLeft;
	}
	set paddingLeft(value: number) {
		this._paddingLeft = value;
		this.markDirty("PaddingLeft");
	}
	private _paddingTop: number = 0;
	get paddingTop(): number {
		return this._paddingTop;
	}
	set paddingTop(value: number) {
		this._paddingTop = value;
		this.markDirty("PaddingTop");
	}
	private _paddingRight: number = 0;
	get paddingRight(): number {
		return this._paddingRight;
	}
	set paddingRight(value: number) {
		this._paddingRight = value;
		this.markDirty("PaddingRight");
	}
	private _paddingBottom: number = 0;
	get paddingBottom(): number {
		return this._paddingBottom;
	}
	set paddingBottom(value: number) {
		this._paddingBottom = value;
		this.markDirty("PaddingBottom");
	}
	private _name1: string = null;
	get name(): string {
		return this._name1;
	}
	set name(value: string) {
		this._name1 = value;
		this.markDirty("Name");
	}
	private _propertyPath: string = null;
	get propertyPath(): string {
		return this._propertyPath;
	}
	set propertyPath(value: string) {
		this._propertyPath = value;
		this.markDirty("PropertyPath");
	}
	private _headerText: string = null;
	get headerText(): string {
		return this._headerText;
	}
	set headerText(value: string) {
		this._headerText = value;
		this.markDirty("HeaderText");
	}
	private _actualHeaderText: string = null;
	get actualHeaderText(): string {
		return this._actualHeaderText;
	}
	set actualHeaderText(value: string) {
		this._actualHeaderText = value;
		this.markDirty("ActualHeaderText");
	}
	private _selectedBackground: string = null;
	get selectedBackground(): string {
		return this._selectedBackground;
	}
	set selectedBackground(value: string) {
		this._selectedBackground = value;
		this.markDirty("SelectedBackground");
	}
	private _actualSelectedBackground: string = null;
	get actualSelectedBackground(): string {
		return this._actualSelectedBackground;
	}
	set actualSelectedBackground(value: string) {
		this._actualSelectedBackground = value;
		this.markDirty("ActualSelectedBackground");
	}
	private _animationSettings: GridColumnAnimationSettingsDescription = null;
	get animationSettings(): GridColumnAnimationSettingsDescription {
		return this._animationSettings;
	}
	set animationSettings(value: GridColumnAnimationSettingsDescription) {
		this._animationSettings = value;
		this.markDirty("AnimationSettings");
	}
	private _width: ColumnWidthDescription = null;
	get width(): ColumnWidthDescription {
		return this._width;
	}
	set width(value: ColumnWidthDescription) {
		this._width = value;
		this.markDirty("Width");
	}
	private _minWidth: number = 0;
	get minWidth(): number {
		return this._minWidth;
	}
	set minWidth(value: number) {
		this._minWidth = value;
		this.markDirty("MinWidth");
	}
	private _isFromMarkup: boolean = false;
	get isFromMarkup(): boolean {
		return this._isFromMarkup;
	}
	set isFromMarkup(value: boolean) {
		this._isFromMarkup = value;
		this.markDirty("IsFromMarkup");
	}
	private _isAutoGenerated: boolean = false;
	get isAutoGenerated(): boolean {
		return this._isAutoGenerated;
	}
	set isAutoGenerated(value: boolean) {
		this._isAutoGenerated = value;
		this.markDirty("IsAutoGenerated");
	}
	private _filter: ColumnFilterConditionDescription = null;
	get filter(): ColumnFilterConditionDescription {
		return this._filter;
	}
	set filter(value: ColumnFilterConditionDescription) {
		this._filter = value;
		this.markDirty("Filter");
	}
	private _header: HeaderDescription = null;
	get header(): HeaderDescription {
		return this._header;
	}
	set header(value: HeaderDescription) {
		this._header = value;
		this.markDirty("Header");
	}
	private _isFilteringEnabled: boolean = false;
	get isFilteringEnabled(): boolean {
		return this._isFilteringEnabled;
	}
	set isFilteringEnabled(value: boolean) {
		this._isFilteringEnabled = value;
		this.markDirty("IsFilteringEnabled");
	}
	private _isResizingEnabled: boolean = false;
	get isResizingEnabled(): boolean {
		return this._isResizingEnabled;
	}
	set isResizingEnabled(value: boolean) {
		this._isResizingEnabled = value;
		this.markDirty("IsResizingEnabled");
	}
	private _isHidden: boolean = false;
	get isHidden(): boolean {
		return this._isHidden;
	}
	set isHidden(value: boolean) {
		this._isHidden = value;
		this.markDirty("IsHidden");
	}
	private _shouldRemoveWhenHidden: boolean = false;
	get shouldRemoveWhenHidden(): boolean {
		return this._shouldRemoveWhenHidden;
	}
	set shouldRemoveWhenHidden(value: boolean) {
		this._shouldRemoveWhenHidden = value;
		this.markDirty("ShouldRemoveWhenHidden");
	}
	private _sortDirection: string = null;
	get sortDirection(): string {
		return this._sortDirection;
	}
	set sortDirection(value: string) {
		this._sortDirection = value;
		this.markDirty("SortDirection");
	}
	private _pinned: string = null;
	get pinned(): string {
		return this._pinned;
	}
	set pinned(value: string) {
		this._pinned = value;
		this.markDirty("Pinned");
	}
}


